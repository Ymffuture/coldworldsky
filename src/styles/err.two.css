




@import 'https://fonts.googleapis.com/css?family=Inconsolata';



.body2 {
    position: relative;
  box-sizing: border-box;
  height: 100vh;
  left: -5px;
  background-color: #000000;
  background-image: radial-gradient(#11581E, #041607), url("https://media.giphy.com/media/oEI9uBYSzLpBK/giphy.gif");
  background-repeat: no-repeat;
  background-size: cover;
  /* font-family: 'Inconsolata', Helvetica, sans-serif; */
  font-family: monospace;
  font-size: 1.5rem;
  color: rgba(128, 255, 128, 0.8);
  text-shadow:
      0 0 1ex rgba(51, 255, 51, 1),
      0 0 2px rgba(255, 255, 255, 0.8);
}


.noise {
  pointer-events: none;
  position: absolute;
  width: 100%;
  height: 100%;
  background-image: url("https://media.giphy.com/media/oEI9uBYSzLpBK/giphy.gif");
  background-repeat: no-repeat;
  background-size: cover;
  z-index: -99;
  opacity: .02;
}

.overlay2 {
  pointer-events: none;
  position: absolute;
  width: 100%;
  height: 100%;
  background:
      repeating-linear-gradient(
      180deg,
      rgba(0, 0, 0, 0) 0,
      rgba(0, 0, 0, 0.3) 50%,
      rgba(0, 0, 0, 0) 100%);
  background-size: auto 4px;
  z-index: 1;
}

.overlay2::before {
  content: "";
  pointer-events: none;
  position: absolute;
  display: block;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  background-image: linear-gradient(
      0deg,
      transparent 0%,
      rgba(32, 128, 32, 0.2) 2%,
      rgba(32, 128, 32, 0.8) 3%,
      rgba(32, 128, 32, 0.2) 3%,
      transparent 100%);
  background-repeat: no-repeat;
  animation: scan 7.5s linear 0s infinite;
}

@keyframes scan {
  0%        { background-position: 0 -100vh; }
  35%, 100% { background-position: 0 100vh; }
}

.terminal {
  box-sizing: inherit;
  position: absolute;
  height: 100%;
  width: 1000px;
  max-width: 100%;
  padding: 4rem;
  text-transform: uppercase;
}

.output {
  color: rgba(128, 255, 128, 0.8);
  text-shadow:
      0 0 1px rgba(51, 255, 51, 0.4),
      0 0 2px rgba(255, 255, 255, 0.8);
}

.output::before {
  content: ">> ";
}


.input {
  color: rgba(192, 255, 192, 0.8);
  text-shadow:
      0 0 1px rgba(51, 255, 51, 0.4),
      0 0 2px rgba(255, 255, 255, 0.8);
}

.input::before {
  content: "$ ";
}

/* .input-line {
    color: rgba(192, 255, 192, 0.8);
    text-shadow:
        0 0 1px rgba(51, 255, 51, 0.4),
        0 0 2px rgba(255, 255, 255, 0.8);
  }
  
  .input-line::before {
    content: "|";
    animation: bing .7s ease-in-out infinite;
  }
@keyframes bing {
    from{
        opacity: 0;

    }
} */


.a {
  color: whitesmoke;
  text-decoration: none;
  cursor: default;
}

.a::before {
  content: "[";
}

.a::after {
  content: "]";
}

.errorcode {
  color: whitesmoke;
}

.typewriter .AB {
    /* color: #fff; */
    font-family: monospace;
    overflow: hidden;
    border-right: 7px solid whitesmoke;
    white-space: nowrap; 
    margin: 0 auto; 
    /* letter-spacing: .01em;  */
    animation: 
      typing 2.5s steps(35, end),
      blink-caret .8s step-end infinite;
      color: rgba(128, 255, 128, 0.8);
      text-shadow:
      0 0 1px rgba(51, 255, 51, 0.4),
      0 0 2px rgba(255, 255, 255, 0.8);
      width: 100%;
  }
  
  /* The typing effect */
  @keyframes typing {
    from { width: 0 }
    to { width: 120% }
  }
  
  /* The typewriter cursor effect */
  @keyframes blink-caret {
    from, to { border-color: transparent }
    50% { border-color: rgba(51, 255, 51, 0.4)}
  }
  

  .curly::before{
    content: '{';
  }
  .curly::after{
    content: '}';
  }
  .errow::after{
    content: '>';
  }